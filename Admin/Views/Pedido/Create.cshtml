@model Admin.Models.PedidoItemViewModel

@{
  ViewBag.Title = "Create";
  //buscar os itens de um pedido via id do cliente
}
<script>
  $(document).ready(function zerar() {
    //$('#idPessoa').val("");
    //$('#idProduto').selectedValue("");
    $("#idProduto")[0].selectedIndex=0;
  });

    function enviarClienteItem() {
      $.post('/Pedido/Create', { IdCliente: $('#Pessoa_Id').val(), idProduto: $('#Produto').val(), qtde: $('#Produto_Quantidade').val() },
        function (data) {
          alert("Cool");
          //$.post('/Pedido/PegarFilaCarrinho', { acionar: 1 },
          //  function (data) {
          //    var tr;
          //    $('dataTables_empty').hide();
          //    for (var i = 0; i < data.length; i++) {
          //      tr = $('<tr/>');
          //      tr.append("<td>" + data[i].Produto.Id + "</td>");
          //      tr.append("<td>" + data[i].Produto.Nome + "</td>");
          //      tr.append("<td>" + data[i].Quantidade + "</td>");
          //      tr.append("<td>" + data[i].Produto.PrecoVenda + "</td>");
          //      $('table').append(tr);
          //    }
          //  }, 'json');
          //$("#total").val(data);
          //$("#PessoaId").prop('disabled', true);
          //$('#Produto_Quantidade').val(1);
          //$("#total").prop('readonly', true);
        }
      , 'json');
    }
    function finalizarPedido(){
      //alert();
      $.post('/Pedido/FinalizarPedido', { idCliente: $('#idPessoa').val() },
           function (data) {
             $("#idProduto")[0].selectedIndex = 0;
             finalizarCadastro("Pedido");
           }
           , 'json');
    }


































    function removerItem(id){
      $("#idProduto")[0].selectedIndex = 0;
      $.post('/Pedido/RemoverItem', { idProduto: id },
            function (data){
              $("#idProduto")[0].selectedIndex=0;
              location.reload();
            }
            , 'json');
    }
  
</script>
<section class="content-header">
  <h1>
    Pedido de Vendas
    <small>Novo</small>
  </h1>
</section>
<section class="content">
  <div class="row">
    <div class="col-lg-12">
      <div class="box box-primary">
        @using (Html.BeginForm("Create", "Pedido", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
          <div class="box-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <br />
            @Html.HiddenFor(model => model.Pedido, new { Value = ViewBag.idPedido })
            <div class="form-group">
              <div class="col-md-2">
                @Html.LabelFor(model => model.Pessoa.Id, "Cliente:", htmlAttributes: new { @class = "control-label col-md-2" })
              </div>
              <div class="col-md-4">
                @*@Html.DropDownList("PessoaId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.idPessoa, (SelectList)ViewBag.PessoaId,"Selecione")
                @Html.ValidationMessageFor(model => model.Pessoa.Id, "", new { @class = "text-danger" })
              </div>
            </div>
            <br />

            <div class="form-group">
              <div class="col-md-2">
                @Html.Label("Quantidade:", htmlAttributes: new { @class = "control-label col-md-2" })
              </div>
              <div class="col-md-4">
                @Html.TextBoxFor(model => model.Quantidade, new { @class = "form-control", id = "Produto_Quantidade", @*min = "1",*@ type = "number" })
                @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
              </div>
            </div>
            <br />

            <div class="form-group">
              <div class="col-md-2">
                @Html.Label("Produto:", htmlAttributes: new { @class = "control-label col-md-2" })
              </div>
              <div class="col-md-4">
                @Html.DropDownListFor(model => model.idProduto, (SelectList)ViewBag.ProdutoId,"Selecione")
                @Html.ValidationMessageFor(model => model.idProduto, "", new { @class = "text-danger" })
              </div>
            </div>
            <br />
            <div class="form-group">
              <div class="col-md-2">
                @Html.Label("Total:", htmlAttributes: new { @class = "control-label col-md-2" })
              </div>
              <div class="col-md-3">
                @Html.TextBoxFor(model => model.Total , new { @class = "form-control", id = "total", @*@readonly = "readonly"*@ })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
              </div>
            </div>

            <div class="form-group">
              <input type="image" class="btn btn-default" value="Adicionar Produto" />
              @*<a class="btn btn-default" onclick="enviarClienteItem();">Adicionar Produto</a>
              <a onclick="finalizarPedido();" class="btn btn-default">Finalizar Pedido</a>*@
            </div>
          </div>
        }
        <div class="box-body">
          <div class="table">
            <table class="table table-striped table-bordered table-hover">
              <thead>
                <tr>
                  <th class="text-center">
                    Código
                  </th>
                  <th class="text-center">
                    Produto
                  </th>
                  <th class="text-center">
                    Quantidade
                  </th>
                  <th class="text-center">
                    Valor unitário
                  </th>
                  <th class="text-center">
                    Deletar
                  </th>

                </tr>
              </thead>

              @if (Model != null)
      {
        foreach (var item in Model.Produtos)
        {
                  <tbody>
                    <tr>
                      <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Produto.Id)
                      </td>
                      <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Produto.Nome)
                      </td>
                      <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Quantidade)
                      </td>
                      <td class="text-center">
                       R$ @Html.DisplayFor(modelItem => item.Produto.PrecoVenda)
                      </td>
                      <td class="text-center">
                        <div class="btn btn-default btn-flat"onclick="removerItem(@item.Produto.Id);">
                          Deletar
                        </div>
                      </td>
                    </tr>
                  </tbody>

                }
              }
            </table>
          </div>
          <div class="form-group">
            <a class="btn btn-default btn-flat" href="@Url.Action("Index", "Pedido")"> Voltar</a>
            <div class="btn btn-default btn-flat" onclick="finalizarPedido();">
              Finalizar pedido!
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  @*<div class="box box-primary" style="padding:7px">*@

  @*</div>*@

</section>
@section Scripts {
  @*<script src="~/Scripts/Pedido.js"></script>*@
  @Scripts.Render("~/bundles/jqueryval")
}
