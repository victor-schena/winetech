@model Admin.Models.PedidoItemViewModel

@{
  ViewBag.Title = "Create";
  //buscar os itens de um pedido via id do cliente
}
<script>
  @*$(document).ready(
  );
    function zerar() {
    //$('#idPessoa').val("");
    //$('#idProduto').selectedValue("");
    $("#idProduto")[0].selectedIndex = 0;
  }


  function enviarClienteItem() {
    $.post('/Pedido/Create', { IdCliente: $('#Pessoa_Id').val(), idProduto: $('#Produto').val(), qtde: $('#Produto_Quantidade').val() },
      function (data) {
        alert("Cool");
        //$.post('/Pedido/PegarFilaCarrinho', { acionar: 1 },
        //  function (data) {
        //    var tr;
        //    $('dataTables_empty').hide();
        //    for (var i = 0; i < data.length; i++) {
        //      tr = $('<tr/>');
        //      tr.append("<td>" + data[i].Produto.Id + "</td>");
        //      tr.append("<td>" + data[i].Produto.Nome + "</td>");
        //      tr.append("<td>" + data[i].Quantidade + "</td>");
        //      tr.append("<td>" + data[i].Produto.PrecoVenda + "</td>");
        //      $('table').append(tr);
        //    }
        //  }, 'json');
        //$("#total").val(data);
        //$("#PessoaId").prop('disabled', true);
        //$('#Produto_Quantidade').val(1);
        //$("#total").prop('readonly', true);
      }
      , 'json');
  }
  function finalizarPedido() {
    //alert();
    $.post('/Pedido/FinalizarPedido', { idCliente: $('#idPessoa').val() },
      function (data) {
        $("#idProduto")[0].selectedIndex = 0;
        finalizarCadastro("Pedido");
      }
      , 'json');
  }
  function removerItem(id) {
    $("#idProduto")[0].selectedIndex = 0;
    $.post('/Pedido/RemoverItem', { idProduto: id },
      function (data) {
        $("#idProduto")[0].selectedIndex = 0;
        location.reload();
      }
      , 'json');
  }

    *@
</script>
<section class="content-header">
  <h1>
    Pedido de Vendas
    <small>Novo</small>
  </h1>
</section>
<section class="content">
  <div class="row">
    <div class="col-lg-12">
      <div class="box box-primary">
        @using (Html.BeginForm("Create", "Pedido", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
          <div class="form-horizontal">
            <div class="box-body">
              @Html.AntiForgeryToken()
              @Html.ValidationSummary(true, "", new { @class = "text-danger" })
              <br />
              @Html.HiddenFor(model => model.Pedido, new { Value = ViewBag.PedidoId, Id = "PedidoId" })
              <div class="form-group">
                <div class="col-md-2">
                  @Html.LabelFor(model => model.Pedido.DataPedido, "Data de Validade:", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                  @Html.EditorFor(model => model.Pedido.DataPedido, new { htmlAttributes = new { @class = "form-control datas required" } })
                  @Html.ValidationMessageFor(model => model.Pedido.DataPedido, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                  @Html.LabelFor(model => model.Pessoa.Id, "Usuário:", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                  @Html.DropDownList("User", (SelectList)ViewBag.Users, new { htmlAttributes = new { @class = "form-control" } })
                </div>
              </div>
              <div class="form-group">
                <div class="col-md-2">
                  @Html.LabelFor(model => model.Pessoa.Id, "Cliente:", htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-8">
                  @Html.TextBoxFor(model => model.Pessoa.NomeCompleto, new { @class = "form-control", @id = "searchName" })
                  <select id="selectClient" class="dropdown"><option value="0">------------------------------</option></select>
                  <br />
                  @Html.ValidationMessageFor(model => model.Pessoa.NomeCompleto, "", new { @class = "text-danger" })
                </div>
              </div>
              <br />
              <div class="form-group">
                <div class="col-md-2">
                  @Html.Label("Produto:", htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-6">
                  @Html.TextBoxFor(model => model.Produto.Nome, new { @class = "form-control", @id = "searchProduct" })
                  <select id="selectProduct" class="dropdown"><option value="0">------------------------------</option> </select>
                  @Html.ValidationMessageFor(model => model.Produto.Nome, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                  @Html.TextBoxFor(model => model.Produto.Quantidade, new { @class = "form-control numberonly", @id = "qtdeProduto", @placeholder = "Quantidade" })
                </div>
              </div>
              <br />
              <div class="form-group">
                <div class="col-md-4">
                  <input type="button" class="btn btn-default" id="enviarProduto" value="Adicionar Produto" />
                  <input class="form-control" disabled="disabled" type="text" id="total"/>
                </div>
              </div>
            </div>
          </div>
        }
        <div class="box-body">
          <div class="table">
            <table class="table table-striped table-bordered table-hover" id="itemTable">
              <thead>
                <tr>
                  <th class="text-center">
                    Código
                  </th>
                  <th class="text-center">
                    Produto
                  </th>
                  <th class="text-center">
                    Quantidade
                  </th>
                  <th class="text-center">
                    Valor unitário
                  </th>
                  <th class="text-center">
                    Deletar
                  </th>

                </tr>
              </thead>

              @if (Model != null)
              {
                foreach (var item in Model.Produtos)
                {
                  <tbody>
                    <tr>
                      <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Id)
                      </td>
                      <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Nome)
                      </td>
                      <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Quantidade)
                      </td>
                      <td class="text-center">
                        R$ @Html.DisplayFor(modelItem => item.PrecoVenda)
                      </td>
                      <td class="text-center">
                        <div class="btn btn-default btn-flat" onclick="removerItem(@item.Id);">
                          Deletar
                        </div>
                      </td>
                    </tr>
                  </tbody>

                }
              }
            </table>
          </div>
          <div class="form-group">
            <a class="btn btn-default btn-flat" href="@Url.Action("Index", "Pedido")"> Voltar</a>
            <input type="submit" class="btn btn-default btn-flat" id="finalizarPedido" value="Finalizar pedido" />
            
          </div>
        </div>
      </div>
    </div>
  </div>
  @*<div class="box box-primary" style="padding:7px">*@

  @*</div>*@

</section>
@section Scripts {
  @*<script src="~/Scripts/Pedido.js"></script>*@
  @Scripts.Render("~/bundles/jqueryval")
}
