@model Admin.Models.RegisterViewModel
@using Admin.Functions
@{
  var imgsize = Constants.ImageFileSize / 1024;
}
<section class="content-header">
  <h1>
    Usuários
    <small>novo usuário</small>
  </h1>
</section>
<section class="content">
  <div class="row">
    <div class="col-lg-12">
      <div class="box box-primary">
        @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
          @Html.AntiForgeryToken()
          <div class="box-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group validation-summary">
              <span class="text-danger">(*) Preencha os campos obrigatórios</span>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Img) <em class="text-red">(Tamanho recomendado: 150x150 / Peso máximo: @imgsize KB)</em>
              <span class="btn btn-sm btn-primary btn-flat fileinput-button">
                <i class="fa fa-camera fa-fw"></i>
                <span>Upload</span>
                @Html.EditorFor(model => model.Img, new { htmlAttributes = new { @class = "form-control fileupload", @type = "file", @accept = "image/*" } })
              </span>
              <em class="help-block">Formatos: png e jpg</em>
              @Html.ValidationMessageFor(model => model.Img, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Name, new { @class = "asterisk" })
              @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control required", @placeholder = "Nome" } })
              @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Email, new { @class = "asterisk" })
              @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control required email", @placeholder = "Email" } })
              @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Password, new { @class = "asterisk" })
              @Html.PasswordFor(model => model.Password, new { @class = "form-control required", @placeholder = "******" })
              @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.ConfirmPassword, new { @class = "asterisk" })
              @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control required", @placeholder = "******" })
              @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
              <label>Perfis</label>
              @foreach (var item in (SelectList)ViewBag.RoleId)
              {
                <div class="checkbox">
                  <label>
                    <input type="checkbox" name="SelectedRoles" value="@item.Value"><small class="text-muted">@item.Value</small>
                  </label>
                </div>
              }
            </div>
            <div class="form-group">
              <input type="submit" value="Salvar" class="btn btn-success btn-flat" />
              <a class="btn btn-danger btn-flat" href="@Url.Action("Index", "Users")" role="button" title="Voltar">Voltar</a>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
</section>
<script>
  setactivemenu('#a-users');
</script>
